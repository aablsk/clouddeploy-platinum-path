#!/bin/bash

# This needs to be added AFTERWARDS to your .env.sh.
# It contains non-customizeable addons which are needed by ALL your scripts

# in case you call skaffold dev it should then just work: https://skaffold.dev/docs/environment/image-registries/
export SKAFFOLD_DEFAULT_REPO="${REGION}-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REPONAME"

# This is the LONG path to your Artifact Registry, worth writing once for all:
export ARTIFACT_LONG_REPO_PATH="${REGION}-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REPONAME"

# calculate how much time it takes
function get_latest_successful_release_by_pipeline() {
    PIPELINE="$1"
    gcloud deploy releases list --delivery-pipeline "$PIPELINE" --filter renderState=SUCCEEDED \
        --format="value(name.split())" \
        --sort-by=~createTime --limit 1 |
        cut -d';' -f 8
}
function red() { 
    echo -en "\033[1;31m$*\033[0m\n" 
}
function green() {
    echo -en "\033[1;32m$*\033[0m\n"
}
function white() {
    echo -en "\033[1;37m$*\033[0m\n"
}
function yellow() {
    echo -en "\033[1;33m$*\033[0m\n"
}

# Executed by ALL scripts in the end.
function _allgood_post_script() {
    echo "[$0] All good on $(date)"
    touch .executed_ok."$(basename $0)".touch
}

function _echodo() {
    (echo -en "[echodo] " ; echo "$@"  )>&2
    "$@"
}

# TODO(ricc): iterate through all clusters. I dont want to be a hypocrite, these ENVs are not used as names are hardcoded everywhere :/
# Needed for the script 11 for GKE magic setup
export CLUSTER_DEV="cicd-dev"
# The two clusters you use for Traffiuc Splitting. Id unsure dont change.
export CLUSTER_1="cicd-canary"
export CLUSTER_2="cicd-prod"
export GKE_REGION="$REGION"

# GKE CONTEXTS
# GKE_DEV_CLUSTER_CONTEXT="gke_cicd-platinum-test001_europe-west6_cicd-dev"
# GKE_CANARY_CLUSTER_CONTEXT="gke_cicd-platinum-test001_europe-west6_cicd-canary"
# GKE_PROD_CLUSTER_CONTEXT="gke_cicd-platinum-test001_europe-west6_cicd-prod"
GKE_DEV_CLUSTER_CONTEXT="gke_${PROJECT_ID}_${GCLOUD_REGION}_cicd-dev"
GKE_CANARY_CLUSTER_CONTEXT="gke_${PROJECT_ID}_${GCLOUD_REGION}_cicd-canary"
GKE_PROD_CLUSTER_CONTEXT="gke_${PROJECT_ID}_${GCLOUD_REGION}_cicd-prod"

# if it works i do it on other 2 two :)
alias kubectl-on-dev="kubectl --context=$GKE_DEV_CLUSTER_CONTEXT"
alias kubectl-on-canary="kubectl --context=$GKE_CANARY_CLUSTER_CONTEXT"
alias kubectl-on-prod="kubectl --context=$GKE_PROD_CLUSTER_CONTEXT"

function _prepend() {
    while read L ; do 
        echo "$*$L"
    done
}
function _kubectl_on_both_canary_and_prod() {
    kubectl --context=$GKE_CANARY_CLUSTER_CONTEXT "$@" | _prepend "[CANA] "
    kubectl --context=$GKE_PROD_CLUSTER_CONTEXT   "$@" | _prepend "[PROD] "
}

# solution 0/3 path (ILB)
export GKE_SOLUTION_ILB_SETUP_DIR="k8s/solution3-multi-cluster-ilb-setup"


# solution 2
export FWD_RULE="${URLMAP_NAME}-fwdrule"

# Adds local bin/ to PATH and takes precedence to make sure scripts like `proceed_if_error_matches` are locally sourced :)
export PATH=$(pwd)/bin/:$PATH

DEBUG_PREPEND="[DEBUG] "
function _deb() {
    if [ "true" = "$DEBUG" ]; then 
        echo "$(white "$DEBUG_PREPEND")$*"
    fi
}

# if DEBUG is enabled I'll write somethign more :)
if [ "true" = "$DEBUG" ]; then 
    PREPEND="[DEBUG] "
    _deb "DEBUG has been enabled! Please change to DEBUG=FALSE in your .env.sh to remove this. Some impotant fields:"
    _deb "PROJECT_ID:        '$PROJECT_ID'"
    _deb "ACCOUNT:           '$ACCOUNT'"
    _deb "GITHUB_REPO_OWNER: '$GITHUB_REPO_OWNER'"
    _deb "ACCOUNT:           '$GCLOUD_REGION'"
    _deb "GKE_REGION:        '$GKE_REGION'"
fi

#export GCLOUD_CONFIG='cicd-platinum' # changeme
#export GCLOUD_ZONE='europe-west6-c' # changeme and make sure ZONE belongs to REGION
